{"version":3,"sources":["models/respond.ts"],"names":[],"mappings":";AAAA,IAAO,QAAQ,WAAW,UAAU,CAAC,CAAC;AAGtC,2BAA2B;AAC3B,IAAI,aAAa,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC;IAEpC,QAAQ,EAAE;QACN,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,EAAE;QACX,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,sBAAsB;KACnC;IACD,MAAM,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,EAAE;QACX,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,sBAAsB;KACnC;IAED,UAAU,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,EAAE;QACX,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,yBAAyB;KACtC;IACD,YAAY,EAAE;QACV,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,EAAE;QACX,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,2BAA2B;KACxC;IACD,UAAU,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,EAAE;QACX,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,yBAAyB;KACtC;IACD,OAAO,EAAE;QACL,IAAI,EAAE,IAAI;QACV,OAAO,EAAE,IAAI,CAAC,GAAG;KACpB;IACD,OAAO,EAAE;QACL,IAAI,EAAE,IAAI;QACV,OAAO,EAAE,IAAI,CAAC,GAAG;KACpB;CACJ,EACG,EAAE,UAAU,EAAE,aAAa,EAAE,CAAC,CAAC;AAEnC,2DAA2D;AAC3D,mDAAmD;AAEnD,gDAAgD;AACrC,eAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC","file":"models/respond.js","sourcesContent":["import mongoose = require('mongoose');\r\nimport passportLocalMongoose = require('passport-local-mongoose');\r\n\r\n// DEFINE THE OBJECT SCHEMA\r\nvar respondSchema = new mongoose.Schema({\r\n    \r\n    question: {\r\n        type: String,\r\n        default: '',\r\n        trim: true,\r\n        required: 'question is required'\r\n    },\r\n    answer: {\r\n        type: String,\r\n        default: '',\r\n        trim: true,\r\n        required: 'Option 1 is required'\r\n    },\r\n    \r\n    senderName: {\r\n        type: String,\r\n        default: '',\r\n        trim: true,\r\n        required: 'Sender Name is required'\r\n    },\r\n    receiverName: {\r\n        type: String,\r\n        default: '',\r\n        trim: true,\r\n        required: 'Receiver Name is required'\r\n    },\r\n    surveyName: {\r\n        type: String,\r\n        default: '',\r\n        trim: true,\r\n        required: 'Survey Name is required'\r\n    },\r\n    created: {\r\n        type: Date,\r\n        default: Date.now\r\n    },\r\n    updated: {\r\n        type: Date,\r\n        default: Date.now\r\n    }\r\n},\r\n    { collection: 'respondInfo' });\r\n\r\n//var options = ({missingPasswordError: \"Wrong password\"});\r\n//mcqSchema.plugin(passportLocalMongoose, options);\r\n\r\n// MAKE THIS PUBLIC SO THE CONTROLLER CAN SEE IT\r\nexport var Respond = mongoose.model('Respond', respondSchema);"],"sourceRoot":"/source/"}