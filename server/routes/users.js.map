{"version":3,"sources":["routes/users.ts"],"names":[],"mappings":"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","file":"routes/users.js","sourcesContent":["import express = require('express');\r\nimport passport = require('passport');\r\nvar router = express.Router();\r\n//variable declaration\r\nvar ss;\r\n// db references\r\nimport mongoose = require('mongoose');\r\nimport userModel = require('../models/user');\r\nimport mcqModel = require('../models/multiple');\r\nimport agreeModel = require('../models/agree');\r\nimport User = userModel.User;\r\nimport Mcq = mcqModel.Mcq;\r\nimport Agree = agreeModel.Agree;\r\n\r\n/* Utility Function to check if user is authenticated */\r\nfunction requireAuth(req:express.Request, res:express.Response, next: any) {\r\n    // check if the user is logged in\r\n    if (!req.isAuthenticated()) {\r\n        return res.redirect('/login');\r\n    }\r\n    next();\r\n}\r\n\r\n// GET - show main users page - list all the users\r\nrouter.get('/', requireAuth, (req: express.Request, res: express.Response, next: any) => {\r\n   \r\n    // use the Users model to query the Users collection\r\n    User.find((error, users) => {\r\n        if (error) {\r\n            console.log(error);\r\n            res.end(error);\r\n        }\r\n        else {\r\n            \r\n                var ds=req.user.displayName ;\r\n                Mcq.distinct(\"surveyName\",{displayName:ds},(error, mcq) => {\r\n                    if (error) {\r\n                        console.log(error);\r\n                        res.end(error);\r\n                    }\r\n                    else {\r\n                        \r\n                         Agree.distinct(\"surveyName\",{displayName:ds},(error, agree) => {\r\n                    if (error) {\r\n                        console.log(error);\r\n                        res.end(error);\r\n                    }\r\n                    else {\r\n                            // no error, we found a list of users\r\n                                res.render('users/index', {\r\n                                title: 'Users',\r\n                                users: users,\r\n                                mcq:mcq,\r\n                                agree: agree,\r\n                                displayName: req.user ? req.user.displayName : ''\r\n            });\r\n        }\r\n    });\r\n                    }                  \r\n            });\r\n        }\r\n    });\r\n});        \r\n        \r\n    \r\n\r\n// GET - show main users page - list all the users\r\nrouter.get('/selectsurvey', requireAuth, (req: express.Request, res: express.Response, next: any) => {\r\n   \r\n    // use the Users model to query the Users collection\r\n    Mcq.find((error, mcq) => {\r\n        if (error) {\r\n            console.log(error);\r\n            res.end(error);\r\n        }\r\n        else {\r\n            // no error, we found a list of users\r\n            \r\n            res.render('users/', {\r\n                title: 'MCQ Survey',\r\n                mcq: mcq,\r\n                displayName: req.user ? req.user.displayName : ''\r\n            });\r\n        }\r\n    });\r\n});\r\nrouter.post('/selectsurvey', requireAuth, (req: express.Request, res: express.Response, next: any) => {\r\n   \r\n    \r\n            // no error, we found a list of users\r\n          \r\n                \r\n                ss=req.body.surveyName;\r\n       // return  res.redirect('/users/surveylist');\r\n        Mcq.find((error, mcq) => {\r\n        if (error) {\r\n            console.log(error);\r\n            res.end(error);\r\n        }\r\n        else {\r\n            // no error, we found a list of users\r\n           \r\n           res.render('users/surveylist', {\r\n                title: 'MCQ Survey',\r\n                surveyname:ss,\r\n                mcq: mcq,\r\n            displayName: req.user ? req.user.displayName : '',\r\n            \r\n            });\r\n        }\r\n    });\r\n              \r\n       \r\n    \r\n});\r\n\r\n// GET - show main users page - list all the users\r\nrouter.get('/selectsurveyagree', requireAuth, (req: express.Request, res: express.Response, next: any) => {\r\n   \r\n    // use the Users model to query the Users collection\r\n    Agree.find((error, agree) => {\r\n        if (error) {\r\n            console.log(error);\r\n            res.end(error);\r\n        }\r\n        else {\r\n            // no error, we found a list of users\r\n            \r\n            res.render('users/agreesurveylist', {\r\n                title: 'Agree/Disagree Survey',\r\n                agree: agree,\r\n                displayName: req.user ? req.user.displayName : ''\r\n            });\r\n        }\r\n    });\r\n});\r\nrouter.post('/selectsurveyagree', requireAuth, (req: express.Request, res: express.Response, next: any) => {\r\n   \r\n    \r\n            // no error, we found a list of users\r\n          \r\n                 // res.redirect('/surveylist');\r\n                ss=req.body.surveyName;\r\n         \r\n          Agree.find((error, agree) => {\r\n        if (error) {\r\n            console.log(error);\r\n            res.end(error);\r\n        }\r\n        else {\r\n            // no error, we found a list of users\r\n            res.render('users/agreesurveylist', {\r\n                title: 'Agree/Disagree Survey',\r\n                surveyname:ss,\r\n                agree: agree,\r\n            displayName: req.user ? req.user.displayName : ''\r\n            \r\n            });\r\n        }\r\n    });\r\n              \r\n       \r\n    \r\n});\r\n\r\n\r\n\r\n\r\n// GET add page - show the blank form\r\n/*router.get('/add', requireAuth, (req: express.Request, res: express.Response, next: any) => {\r\n    res.render('users/add', {\r\n        title: 'Add a New User',\r\n        displayName: req.user ? req.user.displayName : ''\r\n    });\r\n});\r\n\r\n// POST add page - save the new user\r\nrouter.post('/add', requireAuth, (req: express.Request, res: express.Response, next: any) => {\r\n    User.create({\r\n        username: req.body.username,\r\n        password: req.body.password,\r\n        email: req.body.email,\r\n        displayName: req.body.displayName\r\n    }, (error, User) => {\r\n        // did we get back an error or valid Users object?\r\n        if (error) {\r\n            console.log(error);\r\n            res.end(error);\r\n        }\r\n        else {\r\n            res.redirect('/users');\r\n        }\r\n    })\r\n});*/\r\n\r\n// GET edit page - show the current user in the form\r\nrouter.get('/:id', requireAuth, (req: express.Request, res: express.Response, next: any) => {\r\n\r\n    var id = req.params.id;\r\n\r\n    User.findById(id, (error, User) => {\r\n        if (error) {\r\n            console.log(error);\r\n            res.end(error);\r\n        }\r\n        else {\r\n            //show the edit view\r\n            res.render('users/edit', {\r\n                title: 'User Details',\r\n                user: User,\r\n                displayName: req.user ? req.user.displayName : ''\r\n            });\r\n        }\r\n    });\r\n});\r\n\r\n// POST edit page - update the selected user\r\nrouter.post('/:id', requireAuth, (req: express.Request, res: express.Response, next: any) => {\r\n\r\n    // grab the id from the url parameter\r\n    var id = req.params.id;\r\n\r\n    // create and populate a user object\r\n    var user = new User({\r\n        _id: id,\r\n        username: req.body.username,\r\n        password: req.body.password,\r\n        email: req.body.email,\r\n        displayName: req.body.displayName\r\n    });\r\n    \r\n    \r\n\r\n    // run the update using mongoose and our model\r\n    User.update({ _id: id }, user, (error) => {\r\n        if (error) {\r\n            console.log(error);\r\n            res.end(error);\r\n        }\r\n        else {\r\n            // if update is successful redirect to the users page\r\n            res.redirect('/users');\r\n        }\r\n    });\r\n});\r\n\r\n// GET delete user\r\nrouter.get('/delete/:id', requireAuth, (req: express.Request, res: express.Response, next: any) => {\r\n\r\n    // get the id from the url\r\n    var id = req.params.id;\r\n\r\n    // use the model and delete this record\r\n    User.remove({ _id: id }, (error) => {\r\n        if (error) {\r\n            console.log(error);\r\n            res.end(error);\r\n        }\r\n        else {\r\n            // if removal worked redirect to users page\r\n            res.redirect('/users');\r\n        }\r\n    });\r\n});\r\n\r\n// GET edit page - show the current user in the form\r\n/* Render Registration page */\r\nrouter.get('/surveylist1',requireAuth, (req:express.Request, res: express.Response, next:any) => {\r\n\r\n      Mcq.find((error, mcq) => {\r\n        if (error) {\r\n            console.log(error);\r\n            res.end(error);\r\n        }\r\n        else {\r\n            // no error, we found a list of users\r\n            res.render('users/surveylist', {\r\n                title: 'MCQ Survey',\r\n                surveyname:ss,\r\n                mcq: mcq,\r\n            displayName: req.user ? req.user.displayName : ''\r\n            \r\n            });\r\n        }\r\n    });\r\n       \r\n});\r\nrouter.get('/selectsurvey/send',requireAuth, (req:express.Request, res: express.Response, next:any) => {\r\n    res.redirect('/login');\r\n});\r\n\r\n\r\n\r\n// make this public\r\nmodule.exports = router;"],"sourceRoot":"/source/"}