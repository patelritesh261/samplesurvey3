{"version":3,"sources":["routes/users.ts"],"names":[],"mappings":";AAAA,IAAO,OAAO,WAAW,SAAS,CAAC,CAAC;AAEpC,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAC9B,sBAAsB;AACtB,IAAI,EAAE,CAAC;AAGP,IAAO,SAAS,WAAW,gBAAgB,CAAC,CAAC;AAC7C,IAAO,QAAQ,WAAW,oBAAoB,CAAC,CAAC;AAChD,IAAO,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;AAC7B,IAAO,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;AAE1B,wDAAwD;AACxD,qBAAqB,GAAmB,EAAE,GAAoB,EAAE,IAAS;IACrE,iCAAiC;IACjC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;QACzB,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IACD,IAAI,EAAE,CAAC;AACX,CAAC;AAED,kDAAkD;AAClD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,WAAW,EAAE,UAAC,GAAoB,EAAE,GAAqB,EAAE,IAAS;IAEhF,oDAAoD;IACpD,IAAI,CAAC,IAAI,CAAC,UAAC,KAAK,EAAE,KAAK;QACnB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC;QACD,IAAI,CAAC,CAAC;YAEE,IAAI,EAAE,GAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAE;YAC7B,GAAG,CAAC,QAAQ,CAAC,YAAY,EAAC,EAAC,WAAW,EAAC,EAAE,EAAC,EAAC,UAAC,KAAK,EAAE,GAAG;gBAClD,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACnB,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACE,qCAAqC;oBACjC,GAAG,CAAC,MAAM,CAAC,aAAa,EAAE;wBAC1B,KAAK,EAAE,OAAO;wBACd,KAAK,EAAE,KAAK;wBACZ,GAAG,EAAE,GAAG;wBACR,WAAW,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE;qBACpE,CAAC,CAAC;gBACP,CAAC;YACL,CAAC,CAAC,CAAC;QAEC,CAAC;IACL,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,kDAAkD;AAClD,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,WAAW,EAAE,UAAC,GAAoB,EAAE,GAAqB,EAAE,IAAS;IAE5F,oDAAoD;IACpD,GAAG,CAAC,IAAI,CAAC,UAAC,KAAK,EAAE,GAAG;QAChB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,qCAAqC;YAErC,GAAG,CAAC,MAAM,CAAC,uBAAuB,EAAE;gBAChC,KAAK,EAAE,YAAY;gBACnB,GAAG,EAAE,GAAG;gBACR,WAAW,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE;aACpD,CAAC,CAAC;QACP,CAAC;IACL,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AACH,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,WAAW,EAAE,UAAC,GAAoB,EAAE,GAAqB,EAAE,IAAS;IAGrF,qCAAqC;IAEhC,+BAA+B;IAChC,EAAE,GAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IAE7B,GAAG,CAAC,IAAI,CAAC,UAAC,KAAK,EAAE,GAAG;QACtB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,qCAAqC;YACrC,GAAG,CAAC,MAAM,CAAC,kBAAkB,EAAE;gBAC3B,KAAK,EAAE,YAAY;gBACnB,UAAU,EAAC,EAAE;gBACb,GAAG,EAAE,GAAG;gBACZ,WAAW,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE;aAEhD,CAAC,CAAC;QACP,CAAC;IACL,CAAC,CAAC,CAAC;AAIP,CAAC,CAAC,CAAC;AAEH,8BAA8B;AAC9B,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,UAAC,GAAmB,EAAE,GAAqB,EAAE,IAAQ;IACtE,+BAA+B;IAC/B,wBAAwB;IACxB,0CAA0C;IACtC;;;;WAIO;AAEb,CAAC,CAAC,CAAC;AAEH,kCAAkC;AAClC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,EAAC,UAAC,GAAmB,EAAE,GAAqB,EAAE,IAAQ;IAEhF,EAAE,GAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IACxB,GAAG,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AAGH,qCAAqC;AACrC;;;;;;;;;;;;;;;;;;;;;;;;KAwBK;AAEL,oDAAoD;AACpD,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,WAAW,EAAE,UAAC,GAAoB,EAAE,GAAqB,EAAE,IAAS;IAEnF,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IAEvB,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,UAAC,KAAK,EAAE,IAAI;QAC1B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,oBAAoB;YACpB,GAAG,CAAC,MAAM,CAAC,YAAY,EAAE;gBACrB,KAAK,EAAE,cAAc;gBACrB,IAAI,EAAE,IAAI;gBACV,WAAW,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE;aACpD,CAAC,CAAC;QACP,CAAC;IACL,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,4CAA4C;AAC5C,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,EAAE,UAAC,GAAoB,EAAE,GAAqB,EAAE,IAAS;IAEpF,qCAAqC;IACrC,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IAEvB,oCAAoC;IACpC,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC;QAChB,GAAG,EAAE,EAAE;QACP,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ;QAC3B,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ;QAC3B,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK;QACrB,WAAW,EAAE,GAAG,CAAC,IAAI,CAAC,WAAW;KACpC,CAAC,CAAC;IAIH,8CAA8C;IAC9C,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,UAAC,KAAK;QACjC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,qDAAqD;YACrD,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC3B,CAAC;IACL,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,kBAAkB;AAClB,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,WAAW,EAAE,UAAC,GAAoB,EAAE,GAAqB,EAAE,IAAS;IAE1F,0BAA0B;IAC1B,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IAEvB,uCAAuC;IACvC,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,UAAC,KAAK;QAC3B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,2CAA2C;YAC3C,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC3B,CAAC;IACL,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,oDAAoD;AACpD,8BAA8B;AAC9B,MAAM,CAAC,GAAG,CAAC,aAAa,EAAC,WAAW,EAAE,UAAC,GAAmB,EAAE,GAAqB,EAAE,IAAQ;IAErF,GAAG,CAAC,IAAI,CAAC,UAAC,KAAK,EAAE,GAAG;QAClB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,qCAAqC;YACrC,GAAG,CAAC,MAAM,CAAC,kBAAkB,EAAE;gBAC3B,KAAK,EAAE,YAAY;gBACnB,gBAAgB;gBAChB,GAAG,EAAE,GAAG;gBACZ,WAAW,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE;aAEhD,CAAC,CAAC;QACP,CAAC;IACL,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC;AACH,mBAAmB;AACnB,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","file":"routes/users.js","sourcesContent":["import express = require('express');\nimport passport = require('passport');\nvar router = express.Router();\n//variable declaration\nvar ss;\n// db references\nimport mongoose = require('mongoose');\nimport userModel = require('../models/user');\nimport mcqModel = require('../models/multiple');\nimport User = userModel.User;\nimport Mcq = mcqModel.Mcq;\n\n/* Utility Function to check if user is authenticated */\nfunction requireAuth(req:express.Request, res:express.Response, next: any) {\n    // check if the user is logged in\n    if (!req.isAuthenticated()) {\n        return res.redirect('/login');\n    }\n    next();\n}\n\n// GET - show main users page - list all the users\nrouter.get('/', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n   \n    // use the Users model to query the Users collection\n    User.find((error, users) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            \n                var ds=req.user.displayName ;\n                Mcq.distinct(\"surveyName\",{displayName:ds},(error, mcq) => {\n                    if (error) {\n                        console.log(error);\n                        res.end(error);\n                    }\n                    else {\n                            // no error, we found a list of users\n                                res.render('users/index', {\n                                title: 'Users',\n                                users: users,\n                                mcq: mcq,\n                                displayName: req.user ? req.user.displayName : ''\n            });\n        }\n    });\n            \n        }\n    });\n});\n\n// GET - show main users page - list all the users\nrouter.get('/selectsurvey', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n   \n    // use the Users model to query the Users collection\n    Mcq.find((error, mcq) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            // no error, we found a list of users\n            \n            res.render('multiple/createsurvey', {\n                title: 'MCQ Survey',\n                mcq: mcq,\n                displayName: req.user ? req.user.displayName : ''\n            });\n        }\n    });\n});\nrouter.post('/selectsurvey', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n   \n    \n            // no error, we found a list of users\n          \n                 // res.redirect('/surveylist');\n                ss=req.body.surveyName;\n         \n          Mcq.find((error, mcq) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            // no error, we found a list of users\n            res.render('users/surveylist', {\n                title: 'MCQ Survey',\n                surveyname:ss,\n                mcq: mcq,\n            displayName: req.user ? req.user.displayName : ''\n            \n            });\n        }\n    });\n              \n       \n    \n});\n\n/* Render Registration page */\nrouter.get('/add', (req:express.Request, res: express.Response, next:any) => {\n  //  var ss=req.body.surveyName;\n  //  res.send('send'+ss);\n  // res.redirect('/multiple/createsurvey');\n      /*  res.render('users/add', {\n            title: 'Register',\n            messages: req.flash('registerMessage'),\n            displayName: req.user ? req.user.displayName : ''\n        });*/\n       \n});\n\n/* Process Registration Request */\nrouter.post('/add', requireAuth,(req:express.Request, res: express.Response, next:any) => {\n    \n     ss=req.body.surveyName;\n    res.redirect('/users/surveylist');\n});\n\n\n// GET add page - show the blank form\n/*router.get('/add', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n    res.render('users/add', {\n        title: 'Add a New User',\n        displayName: req.user ? req.user.displayName : ''\n    });\n});\n\n// POST add page - save the new user\nrouter.post('/add', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n    User.create({\n        username: req.body.username,\n        password: req.body.password,\n        email: req.body.email,\n        displayName: req.body.displayName\n    }, (error, User) => {\n        // did we get back an error or valid Users object?\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            res.redirect('/users');\n        }\n    })\n});*/\n\n// GET edit page - show the current user in the form\nrouter.get('/:id', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n\n    var id = req.params.id;\n\n    User.findById(id, (error, User) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            //show the edit view\n            res.render('users/edit', {\n                title: 'User Details',\n                user: User,\n                displayName: req.user ? req.user.displayName : ''\n            });\n        }\n    });\n});\n\n// POST edit page - update the selected user\nrouter.post('/:id', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n\n    // grab the id from the url parameter\n    var id = req.params.id;\n\n    // create and populate a user object\n    var user = new User({\n        _id: id,\n        username: req.body.username,\n        password: req.body.password,\n        email: req.body.email,\n        displayName: req.body.displayName\n    });\n    \n    \n\n    // run the update using mongoose and our model\n    User.update({ _id: id }, user, (error) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            // if update is successful redirect to the users page\n            res.redirect('/users');\n        }\n    });\n});\n\n// GET delete user\nrouter.get('/delete/:id', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n\n    // get the id from the url\n    var id = req.params.id;\n\n    // use the model and delete this record\n    User.remove({ _id: id }, (error) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            // if removal worked redirect to users page\n            res.redirect('/users');\n        }\n    });\n});\n\n// GET edit page - show the current user in the form\n/* Render Registration page */\nrouter.get('/surveylist',requireAuth, (req:express.Request, res: express.Response, next:any) => {\n\n      Mcq.find((error, mcq) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            // no error, we found a list of users\n            res.render('users/surveylist', {\n                title: 'MCQ Survey',\n                //surveyname:ss,\n                mcq: mcq,\n            displayName: req.user ? req.user.displayName : ''\n            \n            });\n        }\n    });\n       \n});\n// make this public\nmodule.exports = router;"],"sourceRoot":"/source/"}