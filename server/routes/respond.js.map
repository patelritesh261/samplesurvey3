{"version":3,"sources":["routes/respond.ts"],"names":[],"mappings":";AAAA,IAAO,OAAO,WAAW,SAAS,CAAC,CAAC;AAEpC,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAG9B,sBAAsB;AACtB,IAAI,UAAU,EAAC,UAAU,CAAC;AAQ1B,wDAAwD;AACxD,qBAAqB,GAAmB,EAAE,GAAoB,EAAE,IAAS;IACrE,iCAAiC;IACjC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;QACzB,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IACD,IAAI,EAAE,CAAC;AACX,CAAC;AAGD,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,WAAW,EAAE,UAAC,GAAoB,EAAE,GAAqB,EAAE,IAAS;IACrF,IAAI,EAAE,GAAC,GAAG,CAAC,KAAK,CAAC;IACjB,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,uEAAuE,CAAC,CAAC;IAClH,IAAI,KAAK,GAAG,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;IAEjC,KAAK,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;IACxC,KAAK,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;IAC1C,KAAK,CAAC,UAAU,CAAC,8BAA8B,CAAC,CAAC;IACjD,KAAK,CAAC,OAAO,CAAC,WAAW,GAAC,EAAE,CAAC,WAAW,GAAC,GAAG,GAAC,EAAE,CAAC,UAAU,GAAC,GAAG,GAAC,EAAE,CAAC,UAAU,CAAC,CAAC;IAE9E,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;IACzC,gFAAgF;IAEjF,8BAA8B;AAClC,CAAC,CAAC,CAAC;AACH,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,WAAW,EAAE,UAAC,GAAoB,EAAE,GAAqB,EAAE,IAAS;IACxF,IAAI,EAAE,GAAC,GAAG,CAAC,IAAI,CAAC;IACpB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACV,+BAA+B;AAClC,CAAC,CAAC,CAAC;AACH,MAAM,CAAC,GAAG,CAAC,uCAAuC,EAAE,WAAW,EAAE,UAAC,GAAoB,EAAE,GAAqB,EAAE,IAAS;IAClH,IAAI,EAAE,GAAC,GAAG,CAAC,KAAK,CAAC;IAClB,GAAG,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;IAE9C,8BAA8B;AAClC,CAAC,CAAC,CAAC;AAEH,mBAAmB;AACnB,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","file":"routes/respond.js","sourcesContent":["import express = require('express');\r\nimport passport = require('passport');\r\nvar router = express.Router();\r\n\r\n\r\n//variable declaration\r\nvar surveyname,surveytype;\r\n// db references\r\nimport mongoose = require('mongoose');\r\nimport mcqModel = require('../models/multiple');\r\nimport agreeModel = require('../models/agree');\r\n\r\nimport Mcq = mcqModel.Mcq;\r\nimport Agree = agreeModel.Agree;\r\n/* Utility Function to check if user is authenticated */\r\nfunction requireAuth(req:express.Request, res:express.Response, next: any) {\r\n    // check if the user is logged in\r\n    if (!req.isAuthenticated()) {\r\n        return res.redirect('/login');\r\n    }\r\n    next();\r\n}\r\n\r\n\r\nrouter.get('/presend', requireAuth, (req: express.Request, res: express.Response, next: any) => {\r\n      var ss=req.query;\r\n      var sendgrid = require(\"sendgrid\")(\"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\");\r\nvar email = new sendgrid.Email();\r\n\r\nemail.addTo(\"patelritesh261@gmail.com\");\r\nemail.setFrom(\"patelritesh261@gmail.com\");\r\nemail.setSubject(\"Sending with SendGrid is Fun\");\r\nemail.setHtml(\"/respond/\"+ss.displayName+\"/\"+ss.surveyType+\"/\"+ss.surveyName);\r\n\r\nsendgrid.send(email);\r\n res.send('whoooooooooooooooooooooooooooooo');\r\n     // res.redirect('/respond/'+ss.displayName+'/'+ss.surveyType+'/'+ss.surveyName);\r\n\r\n    //res.render('multiple/text');\r\n});\r\nrouter.post('/presend', requireAuth, (req: express.Request, res: express.Response, next: any) => {\r\n    var ss=req.body;\r\nres.send(ss);\r\n   // res.render('multiple/text');\r\n});\r\nrouter.get('/:displayName/:surveyType/:surveyName', requireAuth, (req: express.Request, res: express.Response, next: any) => {\r\n      var ss=req.query;\r\n     res.send('whoooooooooooooooooooooooooooooo');\r\n\r\n    //res.render('multiple/text');\r\n});\r\n\r\n// make this public\r\nmodule.exports = router;"],"sourceRoot":"/source/"}