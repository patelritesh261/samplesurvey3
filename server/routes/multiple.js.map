{"version":3,"sources":["routes/multiple.ts"],"names":[],"mappings":";AAAA,IAAO,OAAO,WAAW,SAAS,CAAC,CAAC;AAEpC,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAG9B,sBAAsB;AACtB,IAAI,UAAU,CAAC;AAGf,IAAO,QAAQ,WAAW,oBAAoB,CAAC,CAAC;AAEhD,IAAO,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;AAE1B,wDAAwD;AACxD,qBAAqB,GAAmB,EAAE,GAAoB,EAAE,IAAS;IACrE,iCAAiC;IACjC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;QACzB,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IACD,IAAI,EAAE,CAAC;AACX,CAAC;AAED,kDAAkD;AAClD,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,WAAW,EAAE,UAAC,GAAoB,EAAE,GAAqB,EAAE,IAAS;IAE5F,oDAAoD;IACpD,GAAG,CAAC,IAAI,CAAC,UAAC,KAAK,EAAE,GAAG;QAChB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,qCAAqC;YACrC,GAAG,CAAC,MAAM,CAAC,uBAAuB,EAAE;gBAChC,KAAK,EAAE,YAAY;gBACnB,GAAG,EAAE,GAAG;gBACR,WAAW,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE;aACpD,CAAC,CAAC;QACP,CAAC;IACL,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AACH,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,WAAW,EAAE,UAAC,GAAoB,EAAE,GAAqB,EAAE,IAAS;IAGrF,qCAAqC;IAGjC,UAAU,GAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IAE/B,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;AAG9C,CAAC,CAAC,CAAC;AAEH,8BAA8B;AAC9B,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,UAAC,GAAmB,EAAE,GAAqB,EAAE,IAAQ;IAChE,GAAG,CAAC,IAAI,CAAC,UAAC,KAAK,EAAE,GAAG;QACpB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,qCAAqC;YACrC,GAAG,CAAC,MAAM,CAAC,cAAc,EAAE;gBACvB,KAAK,EAAE,YAAY;gBACnB,UAAU,EAAC,UAAU;gBACrB,GAAG,EAAE,GAAG;gBACT,QAAQ,EAAE,GAAG,CAAC,KAAK,CAAC,iBAAiB,CAAC;gBACzC,WAAW,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE;aAEhD,CAAC,CAAC;QACP,CAAC;IACL,CAAC,CAAC,CAAC;AAGP,CAAC,CAAC,CAAC;AAEH,kCAAkC;AAClC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,UAAC,GAAmB,EAAE,GAAqB,EAAE,IAAQ;IACrE,2BAA2B;IAC3B,GAAG,CAAC,MAAM,CAAC;QACP,WAAW,EAAE,GAAG,CAAC,IAAI,CAAC,WAAW;QACjC,UAAU,EAAE,GAAG,CAAC,IAAI,CAAC,UAAU;QAC/B,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ;QAC3B,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO;QACzB,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO;QACzB,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO;QACzB,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO;KAC5B,EAAE,UAAS,KAAK,EAAE,IAAI;QACnB,oDAAoD;QACpD,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;QAClC,CAAC;IACL,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAC;AAGH,qCAAqC;AACrC;;;;;;;;;;;;;;;;;;;;;;;;KAwBK;AAEL,oDAAoD;AACpD,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,WAAW,EAAE,UAAC,GAAoB,EAAE,GAAqB,EAAE,IAAS;IAEvF,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IAEvB,GAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,UAAC,KAAK,EAAE,GAAG;QACxB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,oBAAoB;YACpB,GAAG,CAAC,MAAM,CAAC,eAAe,EAAE;gBACxB,KAAK,EAAE,cAAc;gBACrB,GAAG,EAAE,GAAG;gBACR,WAAW,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE;aACpD,CAAC,CAAC;QACP,CAAC;IACL,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,4CAA4C;AAC5C,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,WAAW,EAAE,UAAC,GAAoB,EAAE,GAAqB,EAAE,IAAS;IAExF,qCAAqC;IACrC,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IAEvB,oCAAoC;IACpC,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC;QACd,GAAG,EAAE,EAAE;QACP,WAAW,EAAC,GAAG,CAAC,IAAI,CAAC,WAAW;QAChC,UAAU,EAAE,GAAG,CAAC,IAAI,CAAC,UAAU;QAC/B,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ;QAC3B,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO;QACxB,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO;QACxB,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO;QACxB,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO;KAC/B,CAAC,CAAC;IAIH,8CAA8C;IAC9C,GAAG,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,UAAC,KAAK;QAC/B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,qDAAqD;YACrD,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;QAClC,CAAC;IACL,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,kBAAkB;AAClB,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,WAAW,EAAE,UAAC,GAAoB,EAAE,GAAqB,EAAE,IAAS;IAE1F,0BAA0B;IAC1B,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IAEvB,uCAAuC;IACvC,GAAG,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,UAAC,KAAK;QAC1B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,2CAA2C;YAC3C,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;QAClC,CAAC;IACL,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAKH,mBAAmB;AACnB,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","file":"routes/multiple.js","sourcesContent":["import express = require('express');\nimport passport = require('passport');\nvar router = express.Router();\n\n\n//variable declaration\nvar surveyname;\n// db references\nimport mongoose = require('mongoose');\nimport mcqModel = require('../models/multiple');\n\nimport Mcq = mcqModel.Mcq;\n\n/* Utility Function to check if user is authenticated */\nfunction requireAuth(req:express.Request, res:express.Response, next: any) {\n    // check if the user is logged in\n    if (!req.isAuthenticated()) {\n        return res.redirect('/login');\n    }\n    next();\n}\n\n// GET - show main users page - list all the users\nrouter.get('/createsurvey', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n   \n    // use the Users model to query the Users collection\n    Mcq.find((error, mcq) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            // no error, we found a list of users\n            res.render('multiple/createsurvey', {\n                title: 'MCQ Survey',\n                mcq: mcq,\n                displayName: req.user ? req.user.displayName : ''\n            });\n        }\n    });\n});\nrouter.post('/createsurvey', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n   \n    \n            // no error, we found a list of users\n          \n                \n                surveyname=req.body.surveyname;\n               \n                res.redirect('/multiple/add');\n       \n    \n});\n\n/* Render Registration page */\nrouter.get('/add', (req:express.Request, res: express.Response, next:any) => {\n        Mcq.find((error, mcq) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            // no error, we found a list of users\n            res.render('multiple/add', {\n                title: 'MCQ Survey',\n                surveyname:surveyname,\n                mcq: mcq,\n               messages: req.flash('registerMessage'),\n            displayName: req.user ? req.user.displayName : ''\n            \n            });\n        }\n    });\n        \n       \n});\n\n/* Process Registration Request */\nrouter.post('/add', (req:express.Request, res: express.Response, next:any) => {\n    // attempt to register user\n    Mcq.create({\n        displayName: req.body.displayName,\n        surveyName: req.body.surveyname,\n        question: req.body.question,\n        option1: req.body.option1,\n        option2: req.body.option2,\n        option3: req.body.option3,\n        option4: req.body.option4,\n    }, function(error, User) {\n        // did we get back an error or valid Article object?\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            res.redirect('/multiple/add');\n        }\n    })\n});\n\n\n// GET add page - show the blank form\n/*router.get('/add', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n    res.render('users/add', {\n        title: 'Add a New User',\n        displayName: req.user ? req.user.displayName : ''\n    });\n});\n\n// POST add page - save the new user\nrouter.post('/add', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n    User.create({\n        username: req.body.username,\n        password: req.body.password,\n        email: req.body.email,\n        displayName: req.body.displayName\n    }, (error, User) => {\n        // did we get back an error or valid Users object?\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            res.redirect('/users');\n        }\n    })\n});*/\n\n// GET edit page - show the current user in the form\nrouter.get('/add/:id', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n\n    var id = req.params.id;\n\n    Mcq.findById(id, (error, Mcq) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            //show the edit view\n            res.render('multiple/edit', {\n                title: 'User Details',\n                mcq: Mcq,\n                displayName: req.user ? req.user.displayName : ''\n            });\n        }\n    });\n});\n\n// POST edit page - update the selected user\nrouter.post('/add/:id', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n\n    // grab the id from the url parameter\n    var id = req.params.id;\n\n    // create and populate a user object\n    var mcq = new Mcq({\n        _id: id,\n        displayName:req.body.displayName,\n        surveyName: req.body.surveyname,\n        question: req.body.question,\n        option1: req.body.option1,\n         option2: req.body.option2,\n          option3: req.body.option3,\n           option4: req.body.option4\n    });\n    \n    \n\n    // run the update using mongoose and our model\n    Mcq.update({ _id: id }, mcq, (error) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            // if update is successful redirect to the users page\n            res.redirect('/multiple/add');\n        }\n    });\n});\n\n// GET delete user\nrouter.get('/delete/:id', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n\n    // get the id from the url\n    var id = req.params.id;\n\n    // use the model and delete this record\n    Mcq.remove({ _id: id }, (error) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            // if removal worked redirect to users page\n            res.redirect('/multiple/add');\n        }\n    });\n});\n\n\n\n\n// make this public\nmodule.exports = router;"],"sourceRoot":"/source/"}