{"version":3,"sources":["app.ts"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["/// <reference path = \"./_reference.ts\"/>\r\n\r\nimport express = require('express');\r\nimport path = require('path');\r\nvar favicon = require('serve-favicon');\r\nimport logger = require('morgan');\r\nimport cookieParser = require('cookie-parser');\r\nimport bodyParser = require('body-parser');\r\n// add mongoose\r\nimport mongoose = require('mongoose');\r\n\r\n// User\r\nimport userModel = require('./models/user');\r\n// MCQ\r\nimport mcqModel = require('./models/multiple');\r\n\r\n\r\nimport User = userModel.User;\r\nimport Mcq = mcqModel.Mcq;\r\n\r\nimport session = require('express-session');\r\n// flash messages\r\nimport flash = require('connect-flash');\r\nimport passport = require('passport');\r\nimport passportLocal = require('passport-local');\r\nimport LocalStrategy = passportLocal.Strategy;\r\n\r\n// import objects namespace\r\nimport * as objects from './objects/customerror';\r\nimport CustomError = objects.CustomError;\r\nvar myerror = new CustomError();\r\n\r\nvar routes = require('./routes/index');\r\nvar users = require('./routes/users');\r\nvar articles = require('./routes/articles');\r\nvar mcq = require('./routes/multiple');\r\nvar respond = require('./routes/respond');\r\n\r\n\r\n\r\nvar app = express();\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'ejs');\r\n\r\n// uncomment after placing your favicon in /public\r\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\r\napp.use(logger('dev'));\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\n// Initialize Session\r\napp.use(session({\r\n    secret: 'someSecret',\r\n    saveUninitialized: false,\r\n    resave: true\r\n}));\r\n\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\n\r\n// Initialize Flash Messages\r\napp.use(flash());\r\n\r\napp.use(express.static(path.join(__dirname, '../public')));\r\n\r\n// passport config\r\npassport.use(User.createStrategy());\r\n//passport.use(new LocalStrategy(User.authenticate()));\r\n\r\npassport.serializeUser(User.serializeUser());\r\npassport.deserializeUser(User.deserializeUser());\r\n\r\n// Route Definitions\r\napp.use('/', routes);\r\napp.use('/users', users);\r\napp.use('/articles', articles);\r\napp.use('/multiple', mcq);\r\napp.use('/respond', respond);\r\n\r\n// connect to mongodb with mongoose\r\nvar DB = require('./config/db');\r\nmongoose.connect(DB.url);\r\n\r\n// check connection\r\nvar db: mongoose.Connection = mongoose.connection;\r\ndb.on('error', console.error.bind(console, 'Connection Error: '));\r\ndb.once('open', function(callback) {\r\n    console.log('Connected to mongoLab');\r\n});\r\n\r\n\r\n// catch 404 and forward to error handler\r\napp.use((req: express.Request, res: express.Response, next: any) => {\r\n    var error = new CustomError('Not Found');\r\n    error.status = 404;\r\n    next(error);\r\n});\r\n\r\n// error handlers\r\n\r\n// development error handler\r\n// will print stacktrace\r\nif (app.get('env') === 'development') {\r\n    app.use((error: CustomError, req: express.Request, res: express.Response, next: any) => {\r\n        res.status(error.status || 500);\r\n        res.render('error', {\r\n            message: error.message,\r\n            error: error\r\n        });\r\n    });\r\n}\r\n\r\n// production error handler\r\n// no stacktraces leaked to user\r\napp.use((error: CustomError, req: express.Request, res: express.Response, next: any) => {\r\n    res.status(error.status || 500);\r\n    res.render('error', {\r\n        message: error.message,\r\n        error: {}\r\n    });\r\n});\r\n\r\n\r\nmodule.exports = app;\r\n"],"sourceRoot":"/source/"}